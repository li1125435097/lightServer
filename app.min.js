let http=require("http"),fs=require("fs"),path=require("path"),url=require("url"),querystring=require("querystring"),dbPath=path.join(__dirname,"db.json"),l=console.log,mockData={},server=http.createServer((e,i)=>{var o=url.parse(e.url),t=o.pathname;if(l(t,e.method),"/"===t||"/index.html"===t)fs.readFile(path.join(__dirname,"index.html"),"utf8",(e,t)=>{e?(i.writeHead(500,{"Content-Type":"text/plain"}),i.end("Internal Server Error")):(i.writeHead(200,{"Content-Type":"text/html"}),i.end(t))});else if("/addMock"===t&&"POST"===e.method){let t=null;e.on("data",e=>{t=JSON.parse(e.toString())}),void e.on("end",()=>{fs.existsSync(dbPath)||fs.writeFileSync(dbPath,"[]");var e=JSON.parse(fs.readFileSync(dbPath).toString());e.push(t),fs.writeFileSync(dbPath,JSON.stringify(e)),mockData[t.path]=t,i.writeHead(200,{"Content-Type":"text/plain"}),i.end("添加成功")})}else if("/getMock"===t)i.writeHead(200,{"Content-Type":"application/json"}),i.end(JSON.stringify(Object.values(mockData)));else{let a=mockData[t];if(a&&e.method===a.method){let t=a.response,n={},r=null;if("GET"!==e.method&&"x-www-form-urlencoded"!==e.headers["content-type"])return e.on("data",e=>{r=JSON.parse(e.toString())}),void e.on("end",()=>{let e=r?t.replace(/\{\{.*\}\}/g,e=>r[e.slice(2,-2)]):t;try{e=JSON.parse(e)}catch(e){}a.hook&&(e=new Function("body","resData","header",a.hook.slice(30,-1))(r,e,n)||e),i.writeHead(n.statusCode||200,Object.assign({"Content-Type":"application/json"},n)),i.end("string"==typeof e?e:JSON.stringify(e))});{let e=(r=querystring.parse(o.query))?t.replace(/\{\{.*\}\}/g,e=>r[e.slice(2,-2)]):t;try{e=JSON.parse(e)}catch(e){}a.hook&&(e=new Function("body","resData","header",a.hook.slice(30,-1))(r,e,n)||e),i.writeHead(n.statusCode||200,Object.assign({"Content-Type":"application/json"},n)),void i.end("string"==typeof e?e:JSON.stringify(e))}}else i.writeHead(404,{"Content-Type":"text/plain"}),i.end("Not Found")}});if(server.listen(3e3,()=>{l("Server is listening on port 3000")}),fs.existsSync(dbPath)){let e=JSON.parse(fs.readFileSync(dbPath).toString());e.forEach(e=>mockData[e.path]=e)}